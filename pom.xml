<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.14</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.career</groupId>
	<artifactId>dx</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>dx1</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>1.8</java.version>
		<spring-cloud-azure.version>4.10.0</spring-cloud-azure.version>
		<dcm4che.version>5.24.0</dcm4che.version>
		<weasis.core.img.version>4.5.3</weasis.core.img.version>
	</properties>
	<repositories>
		<repository>
			<id>dcm4che</id>
			<name>dicom library</name>
			<url>file://${project.basedir}/lib</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.azure.spring</groupId>
			<artifactId>spring-cloud-azure-starter-keyvault</artifactId>
		</dependency>
		<dependency>
			<groupId>com.azure.spring</groupId>
			<artifactId>spring-cloud-azure-starter-storage</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.lettuce</groupId>
			<artifactId>lettuce-core</artifactId>
			<version>6.1.4.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.bgee.log4jdbc-log4j2</groupId>
			<artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
			<version>1.16</version>
		</dependency>

		<!-- dicom -->
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-core</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-dict</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-image</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-imageio</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-imageio-opencv</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-imageio-rle</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.weasis.core</groupId>
			<artifactId>weasis-core-img</artifactId>
			<version>${weasis.core.img.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.13</version>
		</dependency>

		<!-- mail -->
		<dependency>
			<groupId>com.sendgrid</groupId>
			<artifactId>sendgrid-java</artifactId>
			<version>4.7.4</version>
		</dependency>

		<dependency>
			<groupId>com.github.jhonnymertz</groupId>
			<artifactId>java-wkhtmltopdf-wrapper</artifactId>
			<version>1.1.13-RELEASE</version>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.azure.spring</groupId>
				<artifactId>spring-cloud-azure-dependencies</artifactId>
				<version>${spring-cloud-azure.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>ROOT</finalName>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>3.1.4</version>
				<configuration>
					<containerizingMode>packaged</containerizingMode>
					<from>
						<image>${docker.image.prefix}/${docker.image.name}:base</image>
						<auth>
							<username>${docker.username}</username>
							<password>${docker.password}</password>
						</auth>
					</from>
					<to>
						<image>${docker.image.prefix}/${docker.image.name}</image>
						<tags>${docker.tag}</tags>
						<auth>
							<username>${docker.username}</username>
							<password>${docker.password}</password>
						</auth>
					</to>
					<container>
						<entrypoint>/app/entrypoint.sh</entrypoint>
					</container>
					<extraDirectories>
						<paths>
							<path>
								<from>target</from>
								<includes>*.jar</includes>
								<into>/app</into>
							</path>
							<path>
								<from>dockerfiles</from>
								<includes>entrypoint.sh</includes>
								<into>/app</into>
							</path>
							<path>
								<from>target/classes/opencv/linux-amd64</from>
								<includes>*.so</includes>
								<into>/app/opencv</into>
							</path>
						</paths>
						<permissions>
							<permission>
								<file>/app/entrypoint.sh</file>
								<mode>755</mode>
							</permission>
						</permissions>
					</extraDirectories>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>timestamp-property</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
						<configuration>
							<name>buildtime</name>
							<pattern>yyyy.MM.dd HH:mm:ss.SSSSSS</pattern>
							<timeZone>Asia/Seoul</timeZone>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.microsoft.azure</groupId>
				<artifactId>azure-webapp-maven-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<auth>
						<type>service_principal</type>
						<serverId>${azure.servicePrincipal}</serverId>
					</auth>
					<subscriptionId>${azure.subscription}</subscriptionId>
					<resourceGroup>${azure.resourceGroup}</resourceGroup>
					<appName>${azure.appName}</appName>
					<runtime>
						<os>Docker</os>
						<image>${docker.image.prefix}/${docker.image.name}:${docker.tag}</image>
						<serverId>${docker.service-id}</serverId>
						<registryUrl>https://${docker.image.prefix}</registryUrl>
					</runtime>
					<appSettings>
						<!-- 이게 있어야 web app과 docker container 사이에 volumn mount(/home/LogFiles)가 됨 -->
						<property>
							<name>WEBSITES_ENABLE_APP_SERVICE_STORAGE</name>
							<value>true</value>
						</property>
						<property>
							<name>WEBSITES_PORT</name>
							<value>8080</value>
						</property>
						<property>
							<name>BUILDTIME</name>
							<value>${buildtime}</value>
						</property>
						<property>
							<name>SPRING_PROFILES_ACTIVE</name>
							<value>${spring.profiles.active}</value>
						</property>
						<property>
							<name>USER_TIMEZONE</name>
							<value>Asia/Seoul</value>
						</property>
					</appSettings>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
